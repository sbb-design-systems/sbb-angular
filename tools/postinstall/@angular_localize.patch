--- node_modules/@angular/localize/src/tools/src/source_file_utils.d.ts
+++ node_modules/@angular/localize/src/tools/src/source_file_utils.d.ts
@@ -17,14 +17,14 @@
  * @param expression The expression to check.
  * @param localizeName The configured name of `$localize`.
  */
-export declare function isLocalize(expression: NodePath, localizeName: string): expression is NodePath<t.Identifier>;
+export declare function isLocalize(expression: NodePath<any>, localizeName: string): expression is NodePath<t.Identifier>;
 /**
  * Is the given `expression` an identifier with the correct `name`?
  *
  * @param expression The expression to check.
  * @param name The name of the identifier we are looking for.
  */
-export declare function isNamedIdentifier(expression: NodePath, name: string): expression is NodePath<t.Identifier>;
+export declare function isNamedIdentifier(expression: NodePath<any>, name: string): expression is NodePath<t.Identifier>;
 /**
  * Is the given `identifier` declared globally.
  *
@@ -126,7 +126,7 @@
  * Are all the given `nodes` expressions?
  * @param nodes The nodes to test.
  */
-export declare function isArrayOfExpressions(paths: NodePath<t.Node>[]): paths is NodePath<t.Expression>[];
+export declare function isArrayOfExpressions(paths: NodePath<any>[]): paths is NodePath<t.Expression>[];
 /** Options that affect how the `makeEsXXXTranslatePlugin()` functions work. */
 export interface TranslatePluginOptions {
     missingTranslation?: DiagnosticHandlingStrategy;
