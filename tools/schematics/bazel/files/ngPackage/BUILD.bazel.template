<% if (customTsConfig) { %>load("@npm//@bazel/concatjs:index.bzl", "ts_config")
<% } %>load(
    "//src/<%= name %>:config.bzl",
    "<%= constant(shortName) %>_ENTRYPOINTS",
    "<%= constant(shortName) %>_MARKDOWN_TARGETS",
    "<%= constant(shortName) %>_TARGETS",
    "<%= constant(shortName) %>_TESTING_TARGETS",
)
load(
    "//tools:defaults.bzl",
    "markdown_to_html",
    "ng_module",
    "ng_package",<% if (hasTests) { %>
    "ng_test_library",
    "ng_web_test_suite",<% } %><% if (hasTypography || hasFullFont || stylesheets.length) { %>
    "sass_binary",<% } %><% if (hasSassLibrary) { %>
    "sass_library",<% } %>
)

package(default_visibility = ["//visibility:public"])

# Root "@sbb-esta/<%= name %>" entry-point.
ng_module(
    name = "<%= name %>",
    srcs = glob(<% if (hasSrcFiles) { %>
        [
            "*.ts",
            "src/**/*.ts"
        ],<% } else { %>
        ["*.ts"],<% } %>
        exclude = ["**/*.spec.ts"],
    ),<% if (stylesheets.length === 0 && hasHtml && hasCss) { %>
    assets = glob([
        "**/*.html",
        "**/*.css",
    ]),<% } else if (stylesheets.length === 0 && hasHtml) { %>
    assets = glob(["**/*.html"]),<% } else if (stylesheets.length === 1) { %>
    assets = [":<%= stylesheets[0] %>"] + glob(["**/*.html"]),<% } else if (stylesheets.length > 1) { %>
    assets = [<% for (let stylesheet of stylesheets) { %>
        ":<%= stylesheet %>",<% } %>
    ] + glob(["**/*.html"]),<% } %><% if (customTsConfig) { %>
    tsconfig = "<%= customTsConfig %>",<% } %>
    deps = ["//src/<%= name %>/%s" % p for p in <%= constant(shortName) %>_ENTRYPOINTS]<% if (dependencies.length) { %> + [<% for (let dependency of dependencies) { %>
        "<%= dependency %>",<% } %>
    ]<% } %>,
)<% if (customTsConfig) { %>

ts_config(
    name = "tsconfig",
    src = "tsconfig-build.json",
    deps = ["//src:bazel-tsconfig-build.json"],
)<% } %><% if (hasTypography) { %>

sass_binary(
    name = "typography",
    src = "typography.scss",
    deps = ["//src/angular/styles:scss_lib"],
)<% } %><% if (hasFullFont) { %>

sass_binary(
    name = "fullfont",
    src = "fullfont.scss",
)<% } %><% if (hasSassLibrary) { %>

sass_library(
    name = "scss_lib",
    srcs = glob(["**/_*.scss"]),
    deps = ["//src/angular/styles:scss_lib"],
)<% } %><% for (let stylesheet of sassBinaries) { %>

sass_binary(
    name = "<%= stylesheet.name %>",
    src = "<%= stylesheet.path %>",<% if (stylesheet.dependencies.length) { %>
    deps = [<% for (let dependency of stylesheet.dependencies) { %>
        "<%= dependency %>",<% } %>
    ],<% } %>
)<% } %><% if (hasTests) { %>

ng_test_library(
    name = "unit_test_sources",
    srcs = glob(
        ["src/**/*.spec.ts"],
        exclude = ["src/**/*.e2e.spec.ts"],
    ),
    deps = [
        ":<%= name %>",<% for (let dependency of testDependencies) { %>
        "<%= dependency %>",<% } %>
    ],
)

ng_web_test_suite(
    name = "unit_tests",
    deps = [":unit_test_sources"],
)<% } %>

markdown_to_html(
    name = "overview",
    srcs = glob(["*.md"]),
)

filegroup(
    name = "overviews",
    srcs = [":overview"] + ["//src/<%= name %>/%s:overview" % name for name in <%= constant(shortName) %>_MARKDOWN_TARGETS],
)

# Creates the @sbb-esta/<%= name %> package published to npm.
ng_package(
    name = "npm_package",
    srcs = [
        "package.json",<% if (hasSassLibrary) { %>
        ":scss_lib",<% } %><% if (hasTypography) { %>
        ":typography",<% } %><% if (hasFullFont) { %>
        ":fullfont",<% } %><% if (name === 'angular') { %>
        "//src/angular/i18n:xlf",<% } %>
    ],<% if (hasSchematics) { %>
    nested_packages = ["//src/<%= name %>/schematics:npm_package"],<% } %><% if (name === 'journey-maps') { %>
    nested_packages = ["//src/<%= name %>/web-component:npm_package"],<% } %><% if (hasReadme) { %>
    readme_md = "README.md",<% } %>
    tags = ["release-package"],
    deps = <%= constant(shortName) %>_TARGETS + <%= constant(shortName) %>_TESTING_TARGETS,
)
