load("@build_bazel_rules_nodejs//:index.bzl", "pkg_web")
load("@io_bazel_rules_sass//:defs.bzl", "sass_binary")
load("@npm//@bazel/concatjs:index.bzl", "concatjs_devserver")
load("@npm//history-server:index.bzl", "history_server")
load("@npm//html-insert-assets:index.bzl", "html_insert_assets")
load("//tools:defaults.bzl", "esbuild", "ng_ts_library")
load("//tools/highlight-files:index.bzl", "highlight_files")

package(default_visibility = ["//visibility:public"])

# Run the sass compiler to output "styles.css"
sass_binary(
    name = "styles",
    src = "styles.scss",
    include_paths = ["external/npm/node_modules"],
    sourcemap = False,
    deps = ["//src/angular-core/styles:core_scss_lib"],
)

ng_ts_library(
    name = "showcase",
    srcs = glob(
        include = ["*.ts"],
        exclude = [
            "**/*.spec.ts",
            "main.ts",
        ],
    ),
    tsconfig = ":tsconfig.json",
    deps = [
        "//src/showcase/app",
        "@npm//@angular/core",
        "@npm//@angular/platform-browser",
        "@npm//core-js",
    ],
)

ALL_EXAMPLES = [
    "//src/showcase/app/business/business-examples/accordion-examples",
    "//src/showcase/app/business/business-examples/autocomplete-examples",
    "//src/showcase/app/business/business-examples/breadcrumb-examples",
    "//src/showcase/app/business/business-examples/button-examples",
    "//src/showcase/app/business/business-examples/checkbox-examples",
    "//src/showcase/app/business/business-examples/chip-examples",
    "//src/showcase/app/business/business-examples/contextmenu-examples",
    "//src/showcase/app/business/business-examples/datepicker-examples",
    "//src/showcase/app/business/business-examples/dialog-examples",
    "//src/showcase/app/business/business-examples/dropdown-examples",
    "//src/showcase/app/business/business-examples/file-selector-examples",
    "//src/showcase/app/business/business-examples/form-field-examples",
    "//src/showcase/app/business/business-examples/links-examples",
    "//src/showcase/app/business/business-examples/loading-examples",
    "//src/showcase/app/business/business-examples/notification-examples",
    "//src/showcase/app/business/business-examples/notification-toast-examples",
    "//src/showcase/app/business/business-examples/pagination-examples",
    "//src/showcase/app/business/business-examples/processflow-examples",
    "//src/showcase/app/business/business-examples/radio-button-examples",
    "//src/showcase/app/business/business-examples/select-examples",
    "//src/showcase/app/business/business-examples/sidebar-examples",
    "//src/showcase/app/business/business-examples/status-examples",
    "//src/showcase/app/business/business-examples/table-examples",
    "//src/showcase/app/business/business-examples/tabs-examples",
    "//src/showcase/app/business/business-examples/textarea-examples",
    "//src/showcase/app/business/business-examples/textexpand-examples",
    "//src/showcase/app/business/business-examples/time-input-examples",
    "//src/showcase/app/business/business-examples/tooltip-examples",
    "//src/showcase/app/business/business-examples/usermenu-examples",
    "//src/showcase/app/core/core-examples/icon-examples",
    "//src/showcase/app/maps/maps-examples/esri-basemap-gallery-examples",
    "//src/showcase/app/maps/maps-examples/esri-layer-list-examples",
    "//src/showcase/app/maps/maps-examples/esri-legend-examples",
    "//src/showcase/app/maps/maps-examples/esri-web-map-examples",
    "//src/showcase/app/maps/maps-examples/esri-web-scene-examples",
    "//src/showcase/app/public/public-examples/accordion-examples",
    "//src/showcase/app/public/public-examples/autocomplete-examples",
    "//src/showcase/app/public/public-examples/badge-examples",
    "//src/showcase/app/public/public-examples/breadcrumb-examples",
    "//src/showcase/app/public/public-examples/button-examples",
    "//src/showcase/app/public/public-examples/captcha-examples",
    "//src/showcase/app/public/public-examples/checkbox-examples",
    "//src/showcase/app/public/public-examples/checkbox-panel-examples",
    "//src/showcase/app/public/public-examples/datepicker-examples",
    "//src/showcase/app/public/public-examples/dropdown-examples",
    "//src/showcase/app/public/public-examples/file-selector-examples",
    "//src/showcase/app/public/public-examples/form-field-examples",
    "//src/showcase/app/public/public-examples/ghettobox-examples",
    "//src/showcase/app/public/public-examples/lightbox-examples",
    "//src/showcase/app/public/public-examples/links-examples",
    "//src/showcase/app/public/public-examples/loading-examples",
    "//src/showcase/app/public/public-examples/notification-examples",
    "//src/showcase/app/public/public-examples/pagination-examples",
    "//src/showcase/app/public/public-examples/processflow-examples",
    "//src/showcase/app/public/public-examples/radio-button-examples",
    "//src/showcase/app/public/public-examples/radio-button-panel-examples",
    "//src/showcase/app/public/public-examples/search-examples",
    "//src/showcase/app/public/public-examples/select-examples",
    "//src/showcase/app/public/public-examples/table-examples",
    "//src/showcase/app/public/public-examples/tabs-examples",
    "//src/showcase/app/public/public-examples/tag-examples",
    "//src/showcase/app/public/public-examples/textarea-examples",
    "//src/showcase/app/public/public-examples/textexpand-examples",
    "//src/showcase/app/public/public-examples/time-input-examples",
    "//src/showcase/app/public/public-examples/toggle-examples",
    "//src/showcase/app/public/public-examples/tooltip-examples",
    "//src/showcase/app/public/public-examples/usermenu-examples",
]

filegroup(
    name = "example-source-files",
    srcs = ["%s:source-files" % pkg for pkg in ALL_EXAMPLES],
)

highlight_files(
    name = "highlighted-source-files",
    srcs = [":example-source-files"],
    tags = ["docs-package"],
)

_ASSETS = [
    ":styles.css",
    "@npm//:node_modules/zone.js/dist/zone.min.js",
]

# Insert script tags into index.html
# Supports differential loading by providing a.js and a.mjs
html_insert_assets(
    name = "index_html_dev",
    outs = ["index.html"],
    args = [
        "--html=$(execpath :index.dev.html)",
        "--out=$@",
        "--roots=. $(RULEDIR)",
        "--scripts",
        "--nomodule",
        "$(execpath @npm//:node_modules/core-js/client/core.min.js)",
        "--assets",
    ] + ["$(execpath %s)" % s for s in _ASSETS] + [
        # This file doesn't exist during the build, but will be served by concatjs_devserver
        "./_/ts_scripts.js",
    ],
    data = [
        ":index.dev.html",
        "@npm//:node_modules/core-js/client/core.min.js",
    ] + _ASSETS,
)

# This devserver is written in Go and is super-fast.
# It doesn't run any bundler or code splitter. Instead, it concatenates
# named UMD and named AMD JavaScript code on-the-fly in-memory.
# This scales really well for massive codebases.
concatjs_devserver(
    name = "devserver",
    additional_root_paths = [
        "sbb_angular/src/showcase/_",
        "npm/node_modules/core-js/client",
    ],
    entry_module = "sbb_angular/src/showcase/main.dev",
    port = 4200,
    scripts = [
        "@npm//:node_modules/tslib/tslib.js",
        "//tools/umd-modules:ng-localize",
        "//tools/umd-modules:rxjs",
        "//tools/umd-modules:arcgis",
    ],
    static_files = _ASSETS + [
        "@npm//:node_modules/core-js/client/core.min.js",
        ":index_html_dev",
        "//src/showcase/assets",
    ],
    deps = [
        "//src/showcase",
        "//src/showcase/assets",
    ],
)

esbuild(
    name = "bundle-esbuild",
    args = {
        "resolveExtensions": [
            ".mjs",
            ".js",
        ],
    },
    entry_point = "main.prod.ts",
    format = "esm",
    minify = True,
    output_dir = True,
    splitting = True,
    tags = ["prod-showcase"],
    deps = [
        ":showcase",
    ],
)

# Insert script tags into index.html
# Supports differential loading by providing a.js and a.mjs
html_insert_assets(
    name = "index_html_prod",
    # we can't output "src/showcase/index.html" since that collides with the devmode file.
    # pkg_web rule will re-root paths that start with _{name} by default
    # so we output "_prodapp/src/index.html" so that it is mapped to
    # `index.html` in the web package.
    outs = ["_prodapp/src/index.html"],
    args = [
        "--html=$(execpath :index.prod.html)",
        "--out=$@",
        "--roots=. $(RULEDIR)/_prodapp/src $(RULEDIR)",
        "--assets",
    ] + ["$(execpath %s)" % s for s in _ASSETS] + [
        "ng_localize.js",
        "--scripts --module bundle-esbuild/main.prod.js",
    ],
    data = _ASSETS + [
        ":index.prod.html",
    ],
    tags = ["prod-showcase"],
)

pkg_web(
    name = "prodapp",
    srcs = _ASSETS + [
        ":bundle-esbuild",
        ":index_html_prod",
        "//src/showcase/assets",
        "//tools/umd-modules:ng-localize",
    ],
    # In production mode we serve some polyfills with script tags that have hard-coded paths in the index.html
    # so we must serve them at that path, by stripping a prefix
    additional_root_paths = [
        "src/showcase/_prodapp/src",
        "tools/umd-modules",
    ],
    tags = ["prod-showcase"],
)

history_server(
    name = "prodserver",
    args = [
        "--port",
        "4200",
    ],
    data = [":prodapp"],
    tags = ["prod-showcase"],
    templated_args = [
        "-a",
        "$$(rlocation $(rootpath :prodapp))",
    ],
)

exports_files([
    "tsconfig.json",
])
