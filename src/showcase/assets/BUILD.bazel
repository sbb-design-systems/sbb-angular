load("//src/angular:config.bzl", "ANGULAR_ENTRYPOINTS")
load("//tools/package-docs-content-legacy:index.bzl", "package_docs_content_legacy")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "assets",
    srcs = glob([
        "**/*.svg",
        "**/*.png",
        "**/*.jpg",
        "**/*.ico",
        "**/*.html",
        "stack-blitz/**/*",
    ]) + [
        ":docs-content",
        ":stack-blitz/src/app/sbb.module.ts",
    ],
    data = [
        ":docs-content",
    ],
)

package_docs_content_legacy(
    name = "docs-content",
    srcs = {
        # Package the overviews into the docs content
        "//src/journey-maps:overviews": "overviews/journey-maps",
        "//src/angular-maps:overviews": "overviews/angular-maps",
        "//src/angular-experimental:overviews": "overviews/angular-experimental",
        "//src/angular:overviews": "overviews/angular",

        # In order to be able to run examples in StackBlitz, we also want to package the
        # plain source files into the docs-content.
        "//src/components-examples:example-source-files": "examples-source",

        # For the live-examples in our docs, we want to package the highlighted files
        # into the docs content. These will be used to show the source code for examples.
        # Note: `examples-highlighted` is a tree artifact that we want to store as is
        # in the docs-content. Hence there is no target section name.
        "//src/components-examples:examples-highlighted": "",

        # Package the API docs into the docs-content
        "//src:api-docs": "api-docs",
    },
    tags = ["docs-package"],
)

genrule(
    name = "sbb_module",
    outs = ["stack-blitz/src/app/sbb.module.ts"],
    cmd = """
      # Run the bazel entry-point for generating the sbb modules
      # for the examples on StackBlitz info.
      ./$(execpath //tools/stack-blitz-module-template:bazel-bin) \
          "$(execpath stack-blitz/src/app/sbb.module.ts)" \
          "@sbb-esta/angular" \
          %s
    """ % " ".join([ep for ep in ANGULAR_ENTRYPOINTS if ep != "core" and ep != "i18n" and ep != "oauth"]),
    output_to_bindir = True,
    tools = ["//tools/stack-blitz-module-template:bazel-bin"],
)
