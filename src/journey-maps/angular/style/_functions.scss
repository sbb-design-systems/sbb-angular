@use 'icons' as i;
@use '@sbb-esta/angular' as esta;
@use './variables' as v;

@mixin map-controls-shared {
  button {
    display: block;
    width: 100%;
    background-color: inherit;
    border: 0;
    padding: 0;
  }

  .map-control-container {
    margin: v.$controlsMargin;
    background: esta.$sbbColorWhite;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
    border-radius: calc(v.$controlsWidth / 2);

    @include esta.mq($from: tabletPortrait) {
      &.small-buttons {
        margin: v.$controlsMarginSmall;
      }
    }

    &.dark {
      background: esta.$sbbColorBlack;
      outline: 1px solid esta.$sbbColorMetal;
    }
  }

  .map-control-button-wrapper {
    line-height: 36px;
    padding: 6px;
    width: v.$controlsWidth;

    @include esta.mq($from: tabletPortrait) {
      @at-root .map-control-container.small-buttons #{&} {
        line-height: 26px;
        padding: 3px;
        width: v.$controlsWidthSmall;
      }
    }
  }
}

@mixin map-control-icon {
  .map-control-button-wrapper {
    // this makes sure we only show the hover effect when clicking on the button actually has an effect
    // (i.e. NOT when the mouse is hovering over the outer edges of the button)
    pointer-events: none;

    border-radius: 50%;

    &:not([data-disabled='true']):active,
    &:not([data-disabled='true']):has(:focus-visible) {
      @include _map-control-button-wrapper-active;
    }

    @media (hover: hover) {
      &:not([data-disabled='true']):hover {
        @include _map-control-button-wrapper-active;
      }
    }

    @at-root .map-control-container.dark #{&} {
      &:not([data-disabled='true']):active,
      &:not([data-disabled='true']):has(:focus-visible) {
        @include _map-control-button-wrapper-active-dark;
      }

      @media (hover: hover) {
        &:not([data-disabled='true']):hover {
          @include _map-control-button-wrapper-active-dark;
        }
      }
    }
  }

  @media (forced-colors: active) {
    .map-control-container {
      /* Tell Windows not to change styles for this component */
      forced-color-adjust: none;
    }
  }
}

@mixin _map-control-button-wrapper-active {
  background-color: esta.$sbbColorCharcoal;
  background-clip: content-box;

  .map-control-button {
    background-color: esta.$sbbColorWhite;
  }
}

@mixin _map-control-button-wrapper-active-dark {
  @include _map-control-button-wrapper-active;

  background-color: esta.$sbbColorSmoke;

  .map-control-button {
    background-color: esta.$sbbColorBlack;
  }
}

@mixin map-control-icon-button($icon) {
  .map-control-button {
    background-color: esta.$sbbColorCharcoal;
    cursor: pointer;
    height: 36px;
    pointer-events: auto;
    text-align: center;
    @include i.icon-mask($icon);

    &:not([disabled]):active {
      background-color: esta.$sbbColorWhite;
    }

    @media (hover: hover) {
      &:not([disabled]):hover {
        background-color: esta.$sbbColorWhite;
      }
    }

    &:disabled {
      cursor: default;
      background-color: esta.$sbbColorCloud;
    }

    @include esta.mq($from: tabletPortrait) {
      @at-root .map-control-container.small-buttons #{&} {
        height: 26px;
      }
    }

    @at-root .map-control-container.dark #{&} {
      background-color: esta.$sbbColorWhite;

      &:not([disabled]):focus-visible {
        background-color: esta.$sbbColorBlack;
      }

      @media (hover: hover) {
        &:not([disabled]):hover {
          background-color: esta.$sbbColorBlack;
        }
      }

      &:disabled {
        cursor: default;
        background-color: esta.$sbbColorGranite;
      }
    }
  }
}

@mixin map-control-button-hover {
  .map-control-button:hover,
  .map-control-button:focus-within,
  .map-control-button-selected {
    @extend .map-control-button;
    background-color: esta.$sbbColorCharcoal;
    color: esta.$sbbColorWhite;
  }

  @at-root .map-control-container.dark #{&} {
    .map-control-button:hover,
    .map-control-button:focus-within,
    .map-control-button-selected {
      background-color: esta.$sbbColorSmoke;
      color: esta.$sbbColorBlack;
    }
  }
}
