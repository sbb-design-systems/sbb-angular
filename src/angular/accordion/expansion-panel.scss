@use '@sbb-esta/angular' as sbb;

.sbb-expansion-panel {
  box-sizing: content-box;
  display: block;
  margin: 0;
  transition: border-color var(--sbb-transition-fast-start);
  border: var(--sbb-border-width-thin) solid var(--sbb-expansion-panel-border-color-closed);
  overflow: hidden;

  & + & {
    margin-top: calc(var(--sbb-border-width-thin) * 2);
  }

  &.sbb-expanded {
    border-color: var(--sbb-expansion-panel-border-color-open);

    &.sbb-expansion-panel-full-width {
      // Setting border color to transparent is necessary because of border-color animation
      border-left-color: transparent;
      border-right-color: transparent;

      border-left-width: 0;
      border-right-width: 0;
      padding-left: var(--sbb-border-width-thin);
      padding-right: var(--sbb-border-width-thin);
    }
  }
}

.sbb-expansion-panel-horizontal-padding {
  padding-left: calc(var(--sbb-expansion-panel-padding-horizontal) - var(--sbb-border-width-thin));
  padding-right: calc(var(--sbb-expansion-panel-padding-horizontal) - var(--sbb-border-width-thin));
}

.sbb-expansion-panel-header {
  cursor: pointer;
  display: flex;
  align-items: center;
  position: relative;
  background-color: var(--sbb-expansion-panel-background-color-closed);
  outline: none;
  padding-top: var(--sbb-expansion-panel-header-padding-top);
  padding-bottom: var(--sbb-expansion-panel-header-padding-bottom);

  :where(html.sbb-lean) & {
    padding-bottom: calc(#{sbb.pxToRem(12)} - var(--sbb-border-width-thin));
  }

  &.sbb-expanded::after {
    @include sbb.expansionPanelBorderBottom();
  }

  &:is(.sbb-expanded, .sbb-expanded:is(:focus, :hover)) {
    background: var(--sbb-expansion-panel-background-color-open);
  }

  &.sbb-disabled {
    cursor: default;
    opacity: 0.75;
  }
}

.sbb-expansion-panel-header-indicator {
  flex: 0 0 auto;
  line-height: 0; // Centers the svg icon inside sbb-icon
  height: var(--sbb-icon-size-default);
  width: var(--sbb-icon-size-default);
  margin-left: sbb.pxToRem(24);
  color: var(--sbb-expansion-panel-header-indicator-color);

  // Workaround to ensure calculated height of icon is not greater than line-height
  margin-top: -0.5em;
  margin-bottom: -0.5em;

  :where(.sbb-expansion-panel.sbb-expansion-panel-animations-enabled) & {
    transition: transform 225ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  :where(html.sbb-lean) & {
    transform: rotate(90deg);
  }

  :where(.sbb-expansion-panel.sbb-expanded > .sbb-expansion-panel-header) & {
    :where(html.sbb-lean) & {
      transform: rotate(-90deg);
    }
  }

  :where(html:not(.sbb-lean)) & {
    border: var(--sbb-border-width-thin) solid var(--sbb-color-storm);
    border-radius: 50%;
    padding: calc(#{sbb.pxToRem(4)} * var(--sbb-scaling-factor) - var(--sbb-border-width-thin));

    @include sbb.mq($from: tablet, $to: desktop) {
      margin-left: sbb.pxToRem(40);
    }

    @include sbb.mq($from: tablet) {
      height: calc(#{sbb.pxToRem(32)} * var(--sbb-scaling-factor));
      width: calc(#{sbb.pxToRem(32)} * var(--sbb-scaling-factor));
    }

    @include sbb.mq($from: desktop4k) {
      margin-left: sbb.pxToRem(36);
    }

    @include sbb.mq($from: desktop5k) {
      margin-left: sbb.pxToRem(44);
    }
  }
}

.sbb-expansion-panel-header-content {
  display: flex;
  flex: 1;
  overflow: hidden;
  font-family: var(--sbb-font-light);
  font-size: var(--sbb-font-size-large);
  line-height: var(--sbb-expansion-panel-line-height);
}

.sbb-expansion-panel-content-wrapper {
  // Note: we can't use `overflow: hidden` here, because it can clip content with
  // box shadows. Instead we transition t he `visibility` below.
  // Based on https://css-tricks.com/css-grid-can-do-auto-height-transitions.
  display: grid;
  grid-template-rows: 0fr;
  grid-template-columns: 100%;

  :where(.sbb-expansion-panel.sbb-expansion-panel-animations-enabled) > & {
    transition: grid-template-rows 225ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  :where(.sbb-expansion-panel.sbb-expanded) > & {
    grid-template-rows: 1fr;
  }
}

.sbb-expansion-panel-content {
  display: flex;
  flex-direction: column;
  overflow: visible;
  min-height: 0;

  // The visibility here serves two purposes:
  // 1. Hiding content from assistive technology.
  // 2. Hiding any content that might be overflowing.
  visibility: hidden;

  :where(.sbb-expansion-panel-animations-enabled) & {
    // The duration here is slightly lower so the content
    // goes away quicker than the collapse transition.
    transition: visibility 190ms linear;
  }
  :where(.sbb-expansion-panel.sbb-expanded > .sbb-expansion-panel-content-wrapper) > & {
    visibility: visible;
  }
}

.sbb-expansion-panel-body {
  font-size: var(--sbb-font-size);
  line-height: var(--sbb-line-height);
  padding-top: var(--sbb-divider-medium);
  padding-bottom: var(--sbb-divider-medium);
  background-color: var(--sbb-expansion-panel-background-color-open);

  // Remove the top margin from the first element inside the body.
  > *:first-child {
    margin-top: 0;
  }
}
