@import '../styles/common';

.sbb-icon {
  background-repeat: no-repeat;
  display: inline-block;
  line-height: 0;

  svg:not(.color-immutable) {
    [fill]:not([fill='none']) {
      fill: currentColor;
    }

    [stroke]:not([stroke='none']) {
      stroke: currentColor;
    }

    // TODO: Maybe improve this solution in CDN Image
    & >,
    :not([stroke]):not([fill]) {
      path:not([stroke]):not([fill]),
      polygon:not([stroke]):not([fill]),
      polyline:not([stroke]):not([fill]) {
        fill: currentColor;
      }
    }
  }

  &.sbb-icon-inline {
    font-size: inherit;
    height: inherit;
    line-height: inherit;
    width: inherit;
  }
}

// If any ancestor has .sbb-icon-fit as a class, this rule will be applied.
.sbb-icon-fit sbb-icon,
.sbb-icon-fit sbb-icon svg,
sbb-icon.sbb-icon-fit,
sbb-icon.sbb-icon-fit svg,
.sbb-icon-scaled sbb-icon svg,
sbb-icon.sbb-icon-scaled svg {
  width: 100%;
  height: 100%;
}

.sbb-icon-scaled sbb-icon,
sbb-icon.sbb-icon-scaled {
  width: pxToRem(24);
  height: pxToRem(24);

  :where(html:not(.sbb-lean)) & {
    @include mq($from: desktop4k) {
      width: pxToRem(36);
      height: pxToRem(36);
    }
    @include mq($from: desktop5k) {
      width: pxToRem(48);
      height: pxToRem(48);
    }
  }
}
