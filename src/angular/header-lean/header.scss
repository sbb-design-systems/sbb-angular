@use '@sbb-esta/angular' as sbb;

.sbb-header-lean {
  display: flex;
  align-items: center;
  position: fixed;
  top: 0;
  height: var(--sbb-header-lean-height);
  width: 100%;
  z-index: var(--sbb-header-lean-base-z-index);
  background-color: var(--sbb-color-white);
  border-bottom: var(--sbb-border-width-thin) solid var(--sbb-color-silver);
}

/** Top positioned menu. */
.sbb-header-lean-main-menu {
  overflow-x: hidden;
  display: flex;
  flex-grow: 1;

  > :is(a, button) {
    margin-right: calc(#{sbb.pxToRem(15)} * var(--sbb-scaling-factor));
  }

  .sbb-header-fixed-columns & {
    margin-left: calc(#{sbb.pxToRem(50)} * var(--sbb-scaling-factor));

    > :is(a, button) {
      flex: 0 0 20%;
      margin-right: unset;
    }
  }
}

/** Header environment styles. */
.sbb-header-environment {
  z-index: 1;
  pointer-events: none;
  width: calc(#{sbb.pxToRem(80)} * var(--sbb-scaling-factor));
  position: absolute;
  top: calc(#{sbb.pxToRem(12)} * var(--sbb-scaling-factor));
  left: calc(#{sbb.pxToRem(-20)} * var(--sbb-scaling-factor));
  text-align: center;
  line-height: calc(#{sbb.pxToRem(12)} * var(--sbb-scaling-factor));
  letter-spacing: 0;
  font-size: calc(#{sbb.pxToRem(10)} * var(--sbb-scaling-factor));
  color: var(--sbb-color-white);
  transform: rotate(-45deg);
}

// Default colors for the environments
.sbb-header-environment-local {
  background-color: var(--sbb-color-autumn);
}
.sbb-header-environment-dev {
  background-color: var(--sbb-color-peach);
}
.sbb-header-environment-test {
  background-color: var(--sbb-color-night);
}
.sbb-header-environment-edu {
  background-color: var(--sbb-color-green);
}
.sbb-header-environment-int {
  background-color: var(--sbb-color-granite);
}

/** Side menu */
:is(.sbb-header-lean-open-menu, .sbb-header-lean-close-menu) {
  flex-grow: 0;
  flex-shrink: 0;
  width: var(--sbb-icon-size-default);
  height: var(--sbb-icon-size-default);
  margin-left: calc(#{sbb.pxToRem(15)} * var(--sbb-scaling-factor));
  cursor: pointer;
  position: relative;
  outline: none;

  &:is(:focus, :hover) {
    color: var(--sbb-color-red125);
  }
}

.sbb-header-lean-open-menu {
  visibility: hidden;

  .sbb-header-lean:is(.sbb-header-lean-menus-collapsed, .sbb-header-lean-app-chooser-available) & {
    visibility: visible;
  }
}

.sbb-header-lean-titlebox {
  display: flex;
  flex-grow: 0;
  flex-direction: column;
  width: auto;
  margin-left: calc(#{sbb.pxToRem(15)} * var(--sbb-scaling-factor));
  margin-right: calc(#{sbb.pxToRem(38)} * var(--sbb-scaling-factor));
  font-family: var(--sbb-font-light);

  .sbb-header-fixed-columns & {
    width: calc(#{sbb.pxToRem(200)} * var(--sbb-scaling-factor));
    margin-right: unset;
  }
}

.sbb-header-lean-label,
.sbb-header-lean-subtitle {
  @include sbb.ellipsis();
}

.sbb-header-lean-label {
  font-size: var(--sbb-font-size);
  line-height: var(--sbb-line-height);
  color: var(--sbb-color-black);
  font-family: var(--sbb-font-roman);
}

.sbb-header-lean-subtitle {
  font-size: var(--sbb-font-size-small);
  font-weight: 300;
  line-height: calc(#{sbb.pxToRem(16)} * var(--sbb-scaling-factor));
  color: var(--sbb-color-anthracite);
}

:is(.sbb-header-lean-main-menu, .sbb-header-lean-side-menu) {
  > a {
    text-decoration: none;
  }
  > button:where(:not(.sbb-menu-panel-trigger)) {
    @include sbb.buttonResetFrameless();
  }
  > :is(a, button) {
    font-size: var(--sbb-font-size);
    line-height: var(--sbb-line-height);
    border: var(--sbb-border-width-thin) solid transparent;
    padding: calc(#{sbb.pxToRem(6)} * var(--sbb-scaling-factor))
      calc(#{sbb.pxToRem(8)} * var(--sbb-scaling-factor));
    outline: none;
    color: var(--sbb-color-text);
    font-family: var(--sbb-font-roman);
    text-align: left;
    cursor: pointer;

    &:is(:hover, :active, :focus, .sbb-active) {
      color: var(--sbb-color-call-to-action-hover);
    }
  }
}

// Menu integration
:is(.sbb-menu-trigger.sbb-menu-trigger-header, .sbb-menu-panel-type-header
    .sbb-menu-panel-trigger) {
  position: relative;
  padding-right: calc(#{sbb.pxToRem(24)} * var(--sbb-scaling-factor));
  font-size: var(--sbb-font-size);
  line-height: var(--sbb-line-height);

  &::after {
    content: var(--sbb-url-icon-chevron-small-down-small-black);
    display: inline-block;
    width: var(--sbb-icon-size-default);
    height: var(--sbb-icon-size-default);
    position: absolute;
    right: 0;
    vertical-align: middle;
    transition: transform var(--sbb-transition-default);
    transform: rotate(0deg);
  }

  &:is(:focus, :hover)::after {
    content: var(--sbb-url-icon-chevron-small-down-small-red125);
  }
}

// We want the chevron roation animation to happen after the menu animation is finished.
.sbb-menu-panel-type-header:is(:not(.ng-animating)) .sbb-menu-panel-trigger::after {
  transform: rotate(180deg);
}

.sbb-header-lean-side-menu .sbb-menu-trigger.sbb-menu-trigger-header {
  &::after,
  &:is(:focus, :hover)::after {
    transform: rotate(-90deg);
  }
}

.sbb-menu-panel-type-header .sbb-menu-panel-trigger {
  width: 100%;
  text-align: left;
  padding-left: calc(#{sbb.pxToRem(8)} * var(--sbb-scaling-factor));
  padding-right: calc(#{sbb.pxToRem(8)} * var(--sbb-scaling-factor));
}

.sbb-header-lean-container-end {
  flex-grow: 0;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  margin-right: calc(#{sbb.pxToRem(35)} * var(--sbb-scaling-factor));

  > .sbb-header-lean-usermenu {
    z-index: 1;
    margin-left: calc(#{sbb.pxToRem(15)} * var(--sbb-scaling-factor));
    margin-right: calc(#{sbb.pxToRem(15)} * var(--sbb-scaling-factor));
  }
}

.sbb-header-lean-logo {
  display: flex;
  height: var(--sbb-header-lean-height);

  > svg {
    width: calc(#{sbb.pxToRem(80)} * var(--sbb-scaling-factor));
  }
}

.sbb-header-lean-side-menu-backdrop {
  display: none;
}

.sbb-header-lean.sbb-header-lean-opened .sbb-header-lean-side-menu-backdrop {
  display: block;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: fixed;
}

.sbb-header-lean-side-menu-container {
  display: flex;
  flex-direction: column;
  position: fixed;
  width: var(--sbb-header-lean-menu-width);
  height: 100vh;
  top: 0;
  background-color: var(--sbb-color-white);
  border-right: var(--sbb-border-width-thin) solid var(--sbb-color-granite);
  box-shadow: var(--sbb-box-shadow-width) 0 0 0 var(--sbb-box-shadow-color);
  z-index: var(--sbb-header-lean-side-menu-z-index);
  overflow-y: auto;
}

.sbb-header-lean-side-menu-title-section {
  display: flex;
  align-items: center;
  height: var(--sbb-header-lean-height);
  margin-bottom: calc(#{sbb.pxToRem(12)} * var(--sbb-scaling-factor));
  flex: 0 0 auto;
}

.sbb-header-lean-side-menu {
  flex-direction: column;
  margin: 0 calc(#{sbb.pxToRem(15)} * var(--sbb-scaling-factor));

  > :is(a, button) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}
