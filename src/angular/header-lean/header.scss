@import '../styles/common';

$sbbHeaderHeight: pxToRem(54);
$sbbHeaderMenuWidth: 300px;
$sbbHeaderBaseZIndex: 1000;
$sbbHeaderSideMenuZIndex: 800;
$sbbHeaderMenuMobileZIndex: 1100;
$sbbHeaderMenuTabletZIndex: 700;

.sbb-header-lean {
  display: flex;
  align-items: center;
  position: fixed;
  top: 0;
  height: $sbbHeaderHeight;
  width: 100%;
  z-index: $sbbHeaderBaseZIndex;
  background-color: $sbbColorWhite;
  border-bottom: solid 1px $sbbColorSilver;
}

/** Top positioned menu. */
.sbb-header-lean-main-menu {
  overflow-x: hidden;
  display: flex;
  flex-grow: 1;
}

.sbb-header-lean-main-menu > :is(a, button) {
  margin-right: 1rem;
}

.sbb-header-fixed-columns .sbb-header-lean-main-menu {
  margin-left: pxToRem(50);

  > :is(a, button) {
    flex: 0 0 20%;
    margin-right: unset;
  }
}

/** Header environment styles. */
.sbb-header-environment {
  z-index: 1;
  pointer-events: none;
  width: pxToRem(80);
  position: absolute;
  top: pxToRem(12);
  left: pxToRem(-20);
  text-align: center;
  line-height: pxToRem(12);
  letter-spacing: 0;
  font-size: pxToRem(10);
  color: $sbbColorWhite;
  transform: rotate(-45deg);
}

// Default colors for the environments
.sbb-header-environment-dev {
  background-color: $sbbColorPeach;
}
.sbb-header-environment-test {
  background-color: $sbbColorNight;
}
.sbb-header-environment-edu {
  background-color: $sbbColorGreen;
}
.sbb-header-environment-int {
  background-color: $sbbColorGranite;
}

/** Side menu */
:is(.sbb-header-lean-open-menu, .sbb-header-lean-close-menu) {
  flex-grow: 0;
  flex-shrink: 0;
  width: pxToRem(24);
  height: pxToRem(24);
  margin-left: pxToRem(15);
  cursor: pointer;
  position: relative;
  outline: none;

  &:where(:focus, :hover) {
    color: $sbbColorRed125;
  }
}

.sbb-header-lean-open-menu {
  visibility: hidden;

  .sbb-header-lean:is(.sbb-header-lean-menus-collapsed, .sbb-header-lean-app-chooser-available) & {
    visibility: visible;
  }
}

.sbb-header-lean-titlebox {
  display: flex;
  flex-grow: 0;
  flex-direction: column;
  width: auto;
  margin-left: pxToRem(15);
  margin-right: 2.5rem;
  font-family: $fontSbbLight;

  .sbb-header-fixed-columns & {
    width: pxToRem(200);
    margin-right: unset;
  }
}

.sbb-header-lean-label,
.sbb-header-lean-subtitle {
  @include ellipsis();
}

.sbb-header-lean-label {
  line-height: pxToRem(23);
  color: $sbbColorBlack;
  font-family: $fontSbbRoman;
}

.sbb-header-lean-subtitle {
  font-size: pxToRem(13);
  font-weight: 300;
  line-height: pxToRem(16);
  color: $sbbColorAnthracite;
}

:is(.sbb-header-lean-main-menu, .sbb-header-lean-side-menu) {
  > a {
    text-decoration: none;
  }
  > button:where(:not(.sbb-menu-panel-trigger)) {
    @include buttonResetFrameless();
  }
  > :is(a, button) {
    line-height: pxToRem(23);
    font-size: pxToRem(15);
    border: transparent solid pxToRem(1);
    padding: pxToRem(6) pxToRem(8);
    outline: none;
    color: $sbbColorBlack;
    font-family: $fontSbbRoman;
    text-align: left;
    cursor: pointer;

    &:hover,
    &:active,
    &:focus,
    &.sbb-active {
      color: $sbbColorRed125;
    }
  }
}

// Menu integration
.sbb-menu-trigger.sbb-menu-trigger-header,
.sbb-menu-panel-type-header .sbb-menu-panel-trigger {
  position: relative;
  padding-right: pxToRem(24);
  line-height: pxToRem(23);
  font-size: pxToRem(15);

  &::after {
    content: url($sbbIconChevronSmallDownSmallBlack);
    display: inline-block;
    width: pxToRem(24);
    height: pxToRem(24);
    position: absolute;
    right: 0;
    vertical-align: middle;
    transition: transform 0.3s cubic-bezier(0.785, 0.135, 0.15, 0.86);
    transform: rotate(0deg);
  }

  &:where(:focus, :hover)::after {
    content: url($sbbIconChevronSmallDownSmallRed125);
  }
}

// We want the chevron roation animation to happen after the menu animation is finished.
.sbb-menu-panel-type-header:where(:not(.ng-animating)) .sbb-menu-panel-trigger::after {
  transform: rotate(180deg);
}

.sbb-header-lean-side-menu .sbb-menu-trigger.sbb-menu-trigger-header {
  &::after,
  &:where(:focus, :hover)::after {
    transform: rotate(-90deg);
  }
}

.sbb-menu-panel-type-header .sbb-menu-panel-trigger {
  width: 100%;
  text-align: left;
  padding-left: pxToRem(8);
  padding-right: pxToRem(8);
}

.sbb-header-lean-container-end {
  flex-grow: 0;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  margin-right: pxToRem(35);

  > .sbb-header-lean-usermenu {
    z-index: 1;
    margin-left: pxToRem(15);
    margin-right: pxToRem(15);
  }
}

.sbb-header-lean-logo {
  display: flex;
  height: $sbbHeaderHeight;

  > svg {
    width: pxToRem(80);
  }
}

.sbb-header-lean-side-menu-backdrop {
  display: none;
}

.sbb-header-lean.sbb-header-lean-opened .sbb-header-lean-side-menu-backdrop {
  display: block;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: fixed;
}

.sbb-header-lean-side-menu-container {
  display: flex;
  flex-direction: column;
  position: fixed;
  width: $sbbHeaderMenuWidth;
  height: 100vh;
  top: 0;
  background-color: $sbbColorWhite;
  border-right: 1px solid $sbbColorGranite;
  box-shadow: pxToRem(4) 0 0 0 rgba(0, 0, 0, 0.15);
  z-index: $sbbHeaderSideMenuZIndex;
  overflow-y: auto;
}

.sbb-header-lean-side-menu-title-section {
  display: flex;
  align-items: center;
  height: $sbbHeaderHeight;
  margin-bottom: pxToRem(12);
  flex: 0 0 auto;
}

.sbb-header-lean-side-menu {
  flex-direction: column;
  margin: 0 pxToRem(15);

  > :is(a, button) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}
