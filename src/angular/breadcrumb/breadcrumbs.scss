@import '../styles/common';

$breadcrumbHeightDesktop: 48;
$breadcrumbLabelHeightDesktop: 24;
$breadcrumbAnimationTiming: 0.225s cubic-bezier(0.4, 0, 0.2, 1);
$breadcrumbDropdownIconWidth: 24;
$breadcrumbPaddingX: 30;
$breadcrumbBorderWidthStandard: 2;
$breadcrumbBorderWidthLean: 1;

.sbb-breadcrumbs-wrapper {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  padding-bottom: calc(#{pxToRem(12)} * var(--sbb-scaling-factor));
}

.sbb-breadcrumb {
  display: none;
  align-items: center;
  margin-top: calc(#{pxToRem(12)} * var(--sbb-scaling-factor));
  margin-right: calc(#{pxToRem(6)} * var(--sbb-scaling-factor));
  max-width: 100%;

  :where(html.sbb-lean) & {
    margin-right: pxToRem(4);
  }

  @include mq($from: tabletPortrait) {
    display: flex;
  }

  .sbb-breadcrumbs-expanded & {
    display: flex;
  }

  // Last user defined breadcrumb
  &:last-child {
    display: flex;
    margin-right: 0;

    // Last user defined breadcrumb
    :is(&, & :is(a, button)) {
      :where(html.sbb-lean) & {
        color: var(--sbb-color-black);

        &:is(:hover, :focus) {
          color: var(--sbb-color-call-to-action-hover);
        }
      }
    }
  }

  // Arrow between breadcrumb entries
  & + .sbb-breadcrumb::before {
    content: '';
    display: inline-block;
    background: url($sbbIconChevronSmallRightSmallPlatinum) no-repeat center;
    background-size: var(--sbb-icon-size-default) var(--sbb-icon-size-default);
    width: var(--sbb-icon-size-default);
    height: var(--sbb-icon-size-default);
    margin-right: calc(#{pxToRem(6)} * var(--sbb-scaling-factor));
    flex-shrink: 0;

    :where(html.sbb-lean) & {
      background-image: url($sbbIconChevronSmallRightSmallGranite);
      margin-right: pxToRem(4);
    }
  }

  :is(a, button, .sbb-menu-trigger-breadcrumb.sbb-menu-trigger-root) {
    @include buttonResetFrameless();
    outline: 0;
    cursor: pointer;
  }
}

.sbb-breadcrumb-root {
  display: flex;

  a {
    height: calc(#{pxToRem(24)} * var(--sbb-scaling-factor));
    width: calc(#{pxToRem(24)} * var(--sbb-scaling-factor));
  }
}

.sbb-breadcrumb-dots {
  display: flex;

  .sbb-breadcrumbs-expanded & {
    display: none;
  }

  @include mq($from: tabletPortrait) {
    display: none;
  }
}

// Every breadcrumb item inclusive menu trigger and copied menu trigger (inside panel)
:is(.sbb-breadcrumb
    :is(a, button), .sbb-menu-trigger-breadcrumb.sbb-menu-trigger-root, .sbb-menu-panel-type-breadcrumb
    .sbb-menu-panel-trigger) {
  @include ellipsis;
  font-family: var(--sbb-font-roman);
  font-size: var(--sbb-font-size-small);
  line-height: var(--sbb-line-height-small);
  color: var(--sbb-color-grey);
  text-align: left;
  text-decoration: none;

  :where(html.sbb-lean) & {
    color: var(--sbb-color-granite);
    line-height: pxToRem(16);
  }

  &:is(:hover, :focus) {
    color: var(--sbb-color-call-to-action-hover);
  }
}

// Menu trigger inside sbb-breadcrumb if menu is open
.sbb-breadcrumb
  .sbb-menu-trigger-breadcrumb.sbb-menu-trigger-root.sbb-menu-trigger-menu-open::after {
  transform: translateY(-50%) rotate(-180deg);
}

// Menu trigger and copied menu trigger (inside panel)
.sbb-breadcrumb .sbb-menu-trigger-breadcrumb.sbb-menu-trigger-root,
.sbb-menu-panel-type-breadcrumb .sbb-menu-panel-trigger {
  position: relative;
  padding-right: var(--sbb-icon-size-default);

  &:is(:focus, :hover)::after {
    background-image: url($sbbIconChevronSmallDownCircleSmallRed125);
  }

  &::after {
    content: '';
    display: inline-block;
    @include absoluteCenterY;
    background: url($sbbIconChevronSmallDownCircleSmallGranite) no-repeat center;
    background-size: var(--sbb-icon-size-default) var(--sbb-icon-size-default);
    width: var(--sbb-icon-size-default);
    height: var(--sbb-icon-size-default);
    flex-shrink: 0;
    transition: transform var(--sbb-transition-fast-start);

    :where(html.sbb-lean) & {
      background-image: url($sbbIconChevronSmallDownCircleSmallGranite);
    }
  }
}

// Copied menu trigger (inside panel)
.sbb-menu-panel-trigger {
  $triggerPaddingY: 14;
  $breadcrumbPaddingX: 30;

  .sbb-menu-panel-type-breadcrumb & {
    padding: calc(var(--sbb-breadcrumb-trigger-padding-y) - var(--sbb-border-width))
      calc(var(--sbb-breadcrumb-trigger-padding-x) + var(--sbb-icon-size-default))
      calc(var(--sbb-breadcrumb-trigger-padding-y) - var(--sbb-border-width))
      calc(var(--sbb-breadcrumb-trigger-padding-x) - var(--sbb-border-width));
    color: var(--sbb-color-call-to-action-hover);

    &::after {
      @keyframes arrowRotate {
        0% {
          transform: translateY(-50%) rotate(0);
        }
        100% {
          transform: translateY(-50%) rotate(-180deg);
        }
      }

      animation: var(--sbb-transition-fast-start) 0s 1 arrowRotate;
      transform: translateY(-50%) rotate(-180deg);
      margin-top: calc(var(--sbb-border-width-negative) + #{pxToRem(1)});
      background-image: url($sbbIconChevronSmallDownCircleSmallRed125);
    }
  }

  .sbb-menu-panel-type-breadcrumb.sbb-menu-panel-below & {
    padding-bottom: var(--sbb-breadcrumb-trigger-padding-y);
    box-shadow: horizontalBorderBoxShadow(1, $breadcrumbBorderWidthStandard);

    :where(html.sbb-lean) & {
      box-shadow: horizontalBorderBoxShadow(1, $breadcrumbBorderWidthLean);
    }
  }
  .sbb-menu-panel-type-breadcrumb.sbb-menu-panel-above & {
    padding-top: var(--sbb-breadcrumb-trigger-padding-y);
    box-shadow: boxShadow(1, $breadcrumbBorderWidthStandard),
      horizontalBorderBoxShadow(-1, $breadcrumbBorderWidthStandard);

    :where(html.sbb-lean) & {
      box-shadow: boxShadow(1, $breadcrumbBorderWidthLean),
        horizontalBorderBoxShadow(-1, $breadcrumbBorderWidthLean);
    }

    &::after {
      margin-top: calc(var(--sbb-border-width) - #{pxToRem(1)});
    }
  }
}

.sbb-menu-panel-root {
  .sbb-menu-panel-type-breadcrumb.sbb-menu-panel-below & {
    border-top-right-radius: 0;
    border-top-left-radius: 0;
  }
  .sbb-menu-panel-type-breadcrumb.sbb-menu-panel-above & {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.sbb-menu-panel-type-breadcrumb .sbb-menu-item {
  font-size: var(--sbb-font-size-smal);
  line-height: var(--sbb-line-height-small);
  padding-left: calc(var(--sbb-breadcrumb-trigger-padding-x) - var(--sbb-border-width));
  padding-right: var(--sbb-breadcrumb-trigger-padding-x);
}
