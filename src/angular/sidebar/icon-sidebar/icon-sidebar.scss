@use '@sbb-esta/angular' as sbb;
@use '../sidebar';

:is(.sbb-icon-sidebar-container.sbb-icon-sidebar-after-header, .sbb-header-lean
    + .sbb-icon-sidebar-container) {
  top: var(--sbb-header-lean-height);
}

.sbb-icon-sidebar-container {
  @include sidebar.sbb-sidebar-container('.sbb-icon-sidebar');

  display: flex;
  flex-direction: row;
}

.sbb-icon-sidebar-container-mobile {
  flex-direction: column-reverse;
}

.sbb-icon-sidebar-content {
  @include sidebar.sbb-sidebar-content;
  flex: 1 1;
}

.sbb-icon-sidebar {
  @include sidebar.sbb-sidebar;
  position: relative;
  background-color: var(--sbb-color-milk);
  transition: width var(--sbb-transition-duration-default) var(--sbb-transition-timing-default);

  hr {
    margin-top: var(--sbb-divider-small);
    margin-bottom: var(--sbb-divider-small);
    padding: 0;
    border: none;
    border-top: solid var(--sbb-border-width-thin) var(--sbb-color-graphite);
  }

  .sbb-icon-sidebar-container-mobile & {
    width: auto;
    height: var(--sbb-icon-sidebar-item-dimension);
    top: auto;
    left: 0;
    right: 0;
    overflow-y: hidden;
    overflow-x: auto;

    hr {
      margin: 0 var(--sbb-divider-small);
      flex: 0 0 var(--sbb-border-width-thin);
      border-top: none;
      border-left: solid var(--sbb-border-width-thin) var(--sbb-color-graphite);
    }
  }
}

.sbb-icon-sidebar-expanded {
  width: calc(#{sbb.pxToRem(250)} * var(--sbb-scaling-factor));
}

.sbb-icon-sidebar-collapsed {
  width: var(--sbb-icon-sidebar-item-dimension);
}

.sbb-icon-sidebar-inner-container {
  @include sidebar.sbb-sidebar-inner-container();
  overflow-y: auto;
  overflow-x: hidden;

  .sbb-icon-sidebar-container-mobile & {
    overflow-y: hidden;
    overflow-x: auto;

    // Hide scrollbar
    &.sbb-scrollbar {
      scrollbar-width: none;
      &::-webkit-scrollbar {
        width: 0;
        height: 0;
      }
    }
  }
}

.sbb-icon-sidebar-links {
  margin-bottom: var(--sbb-icon-sidebar-item-dimension);

  .sbb-icon-sidebar-container-mobile & {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-bottom: 0;
  }
}

.sbb-icon-sidebar-item {
  position: relative;
  text-decoration: none;
  color: var(--sbb-color-iron);
  font-size: var(--sbb-font-size);
  line-height: sbb.pxToRem(23);
  display: inline-flex;
  align-items: center;
  width: 100%;
  height: var(--sbb-icon-sidebar-item-dimension);

  &:is(:hover, :focus) {
    @include sbb.sbbMenuItemRedLean(calc(var(--sbb-border-width-thin) * 2));
  }

  &.sbb-active {
    @include sbb.sbbMenuItemBlackLean(calc(var(--sbb-border-width-thin) * 2));
    background-color: var(--sbb-color-background);
    cursor: default;
    pointer-events: none;

    &:focus-visible {
      @include sbb.sbbFocusOutline();
    }
  }

  // Styles with non-active limitation to display an outline in safari where focus-visible is not working
  // TODO: Remove limitation once Safari supports focus-visible
  &:not(.sbb-active) {
    outline: 0;
  }

  .sbb-icon-sidebar-container-mobile & {
    display: flex;
    flex: 1 0 var(--sbb-icon-sidebar-item-dimension);
    justify-content: center;

    &:is(:hover, :focus, .sbb-active)::before {
      width: 100%;
      height: calc(var(--sbb-border-width-thin) * 2);
      top: auto;
      bottom: 0;
    }
  }
}

.sbb-icon-sidebar-item-icon {
  display: inline-flex;
  height: var(--sbb-icon-sidebar-item-dimension);
  justify-content: center;
  align-items: center;
  flex: 0 0 var(--sbb-icon-sidebar-item-dimension);

  &:empty::after {
    content: '?';
    display: block;
  }

  .sbb-icon-sidebar-collapsed .sbb-icon-sidebar-collapse-expand-button & {
    transform: rotate(180deg);
  }

  .sbb-icon-sidebar-collapse-expand-button & {
    transition: transform var(--sbb-transition-duration-default)
      var(--sbb-transition-timing-default);
  }
}

.sbb-icon-sidebar-item-label {
  @include sbb.ellipsis();
  padding: 0 calc(#{sbb.pxToRem(12)} * var(--sbb-scaling-factor)) 0
    calc(#{sbb.pxToRem(4)} * var(--sbb-scaling-factor));

  // Clip text instead of ellipsis because of weird animation
  .sbb-icon-sidebar-collapsed & {
    text-overflow: clip;
  }

  .sbb-icon-sidebar-container-mobile & {
    @include sbb.sbbVisuallyHidden();
  }
}

.sbb-icon-sidebar-collapse-expand-button {
  position: absolute;
  bottom: 0;
  width: 100%;
  background-color: var(--sbb-color-milk);
  cursor: pointer;
  outline: 0;
  overflow: hidden;

  &:is(:hover, :focus)::before {
    content: none;
  }
}
