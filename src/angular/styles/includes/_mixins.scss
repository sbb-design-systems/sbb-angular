// ----------------------------------------------------------------------------------------------------
// Mixins
// ----------------------------------------------------------------------------------------------------

/**
 * Contain floats with clearfix
 *
 * http://nicolasgallagher.com/micro-clearfix-hack/
 */

@mixin clearfix() {
  *zoom: 1;

  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

/**
 * Lists with layout purpose
 */

@mixin resetList() {
  list-style: none;
  margin: 0;
  padding: 0;
  font-size: inherit;
}

/**
 * Replace text
 */

@mixin replaceText() {
  display: block;
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

/**
 * Better font rendering (on OS X)
 * http://maximilianhoffmann.com/posts/better-font-rendering-on-osx
 *
 * Usage:
 *
 * .var-dark-on-light {
 * 	@include fontSmoothing;
 * }
 * .var-light-on-dark {
 * 	@include fontSmoothingReset;
 * }
 */

@mixin fontSmoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin fontSmoothingReset() {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
}

/**
 * Placeholder in input fields
 */
@mixin placeholder($color: $sbbColorGrey) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &::-moz-placeholder {
    // Firefox 19+
    color: $color;
    opacity: 1;
  }

  &:-ms-input-placeholder {
    color: $color;
  }
}

// Typo Styles
// ----------------------------------------------------------------------------------------------------

@mixin breakOutOfCenterAndGoFullBleed() {
  // https://cloudfour.com/thinks/breaking-out-with-viewport-units-and-calc/
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);
}

// Centered tab module
@mixin centeredTabModule() {
  display: flex;
  justify-content: center;
}

@mixin ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin inlineSVG() {
  // TODO: remove or change em to rem
  float: none;
  display: inline-block;
  width: pxToEm(16, $sizeFontDefault);
  height: pxToEm(16, $sizeFontDefault);
  margin-bottom: pxToEm(-4, $sizeFontDefault);
  border-radius: 1px;
}

@mixin absoluteCenterXY() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absoluteCenterX() {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin absoluteCenterY() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin setFullBleed($offset) {
  margin-left: -$offset;
  margin-right: -$offset;
}

@mixin panelShadow($attached: below, $borderWidth: 2) {
  $sign: 1;
  @if $attached == above {
    $sign: -1;
  }
  $offset-top: -$sign * ($borderWidth - 1);

  @if $offset-top < 0 {
    $offset-top: $offset-top - 0.05; // better rendering e.g. in 4k mode
  }
  @if $offset-top > 0 {
    $offset-top: ceil($offset-top);
  }
  position: relative;
  top: calc(#{pxToRem($offset-top)} * var(--sbb-scaling-factor));
  box-shadow: boxShadow($sign, $borderWidth), horizontalBorderBoxShadow(-$sign, $borderWidth);
}

@function boxShadow($sign, $borderWidth) {
  @return 0 calc(#{pxToRem($sign * $borderWidth * 4)} * var(--sbb-scaling-factor)) 0
    rgba(0, 0, 0, 0.15);
}

@function boxShadowEm($sign, $borderWidth) {
  @return 0 calc(#{pxToEm($sign * $borderWidth * 4)} * var(--sbb-scaling-factor)) 0
    rgba(0, 0, 0, 0.15);
}

@function horizontalBorderBoxShadow($sign, $borderWidth) {
  @return 0 calc(#{pxToRem($sign * ($borderWidth + 1))} * var(--sbb-scaling-factor)) 0
    calc(#{pxToRem(-$borderWidth)} * var(--sbb-scaling-factor)) $sbbColorCloud;
}

/**
 * Display content for screen reader only.
 * Copied from angular/components .cdk-visually-hidden, in order
 * to apply it to a class conditionally.
 */
@mixin sbbVisuallyHidden() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  // This works around a Chrome bug that can cause the tab to crash when large amounts of
  // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444
  white-space: nowrap;

  // Avoid browsers rendering the focus ring in some cases.
  outline: 0;

  // Avoid some cases where the browser will still render the native controls (see #9049).
  -webkit-appearance: none;
  -moz-appearance: none;
}

@mixin buttonReset() {
  background: none;
  max-width: none;
  min-width: 0;
  padding: 0;
  margin: 0;
}

@mixin buttonResetFrameless() {
  @include buttonReset();
  border: none;
}

// ----------------------------------------------------------------------------------------------------
// Sbb Menu
// ----------------------------------------------------------------------------------------------------

@mixin borderLeftAsBefore($color) {
  &::before {
    content: '';
    position: absolute;
    height: 100%;
    width: pxToRem(1);
    left: 0;
    top: 0;
    background-color: $color;
  }
}

@mixin sbbMenuItemBlackLean() {
  color: $sbbColorBlack;
  background-color: $sbbColorCloud;
  @include borderLeftAsBefore($sbbColorBlack);
}

@mixin sbbMenuItemRedLean() {
  color: $sbbColorRed125;
  background-color: $sbbColorMilk;
  @include borderLeftAsBefore($sbbColorRed125);
}

@mixin sbbAbsoluteFill() {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
