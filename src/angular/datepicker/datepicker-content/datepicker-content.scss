@use '@sbb-esta/angular' as sbb;

@mixin datePickerCellContentBase() {
  position: absolute;
  top: 12.5%;
  left: 12.5%;
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--sbb-datepicker-calendar-body-cell-size);
  height: var(--sbb-datepicker-calendar-body-cell-size);
  line-height: 1;
  padding-left: calc(#{sbb.pxToRem(1)} * var(--sbb-scaling-factor));
  padding-bottom: calc(#{sbb.pxToRem(1)} * var(--sbb-scaling-factor));
}

.sbb-datepicker-content {
  position: relative;
  top: var(--sbb-datepicker-content-offset);
  font-size: var(--sbb-font-size);

  .sbb-datepicker-panel-above & {
    top: auto;
    bottom: var(--sbb-datepicker-content-offset);
  }

  // Arrow
  &::after {
    top: var(--sbb-datepicker-calendar-arrow-offset);
    left: calc(var(--sbb-datepicker-button-offset) + var(--sbb-border-width));
    content: '';
    height: var(--sbb-datepicker-calendar-arrow-width);
    width: var(--sbb-datepicker-calendar-arrow-width);
    position: absolute;
    pointer-events: none;
    transform: rotate(-135deg);
    background-color: var(--sbb-color-background);
    border: var(--sbb-border-width) solid transparent;
    border-right-color: var(--sbb-color-weak-accent);
    border-bottom-color: var(--sbb-color-weak-accent);

    // Cut out obsolete triangle so it does not collide with calendar content
    // `-0.4px` fixes calculation issue in Firefox
    clip-path: polygon(-0.4px 100%, 100% -0.4px, 100% 100%);

    .sbb-datepicker-with-arrows & {
      left: calc(
        var(--sbb-datepicker-button-offset) + var(--sbb-border-width) + var(--sbb-icon-size-default) +
          var(--sbb-datepicker-button-gap)
      );
    }

    .sbb-datepicker-panel-above & {
      top: auto;
      bottom: var(--sbb-datepicker-calendar-arrow-offset);
      transform: rotate(45deg);

      clip-path: var(--sbb-box-shadow-arrow-clip-path);
      box-shadow: var(--sbb-box-shadow-arrow-width) var(--sbb-box-shadow-arrow-width) 0
        var(--sbb-box-shadow-arrow-width) var(--sbb-box-shadow-color);
    }
  }
}

.sbb-calendar {
  display: block;
  max-width: 100%;
  width: var(--sbb-datepicker-calendar-width);
  height: var(--sbb-datepicker-calendar-height);
  background-color: var(--sbb-color-background);
  border: var(--sbb-border-width) solid var(--sbb-color-weak-accent);
  border-radius: var(--sbb-border-radius);
  box-shadow: var(--sbb-box-shadow-below);
}

.sbb-calendar-header {
  display: block;
  border-bottom: var(--sbb-border-width-thin) solid var(--sbb-datepicker-calendar-line-color);
}

.sbb-calendar-controls {
  display: flex;
  height: var(--sbb-datepicker-calendar-header-height);
  align-items: center;
}

.sbb-calendar-controls-months,
.sbb-calendar-controls-years {
  display: flex;
  height: var(--sbb-datepicker-calendar-header-height);
  flex: 1 0 50%;
  text-align: center;
  position: relative;
}

.sbb-calendar-controls-months::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  height: 100%;
  top: 0;
  right: 0;
  border-right: var(--sbb-border-width-thin) solid var(--sbb-datepicker-calendar-line-color);
}

.sbb-calendar-controls-button {
  @include sbb.buttonResetFrameless();

  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  flex-grow: 0;
  outline: 0;
  padding-left: var(--sbb-datepicker-calendar-controls-padding);
  padding-right: var(--sbb-datepicker-calendar-controls-padding);
  height: var(--sbb-datepicker-calendar-header-height);
  cursor: pointer;
  color: var(--sbb-datepicker-calendar-header-color);

  &:is(:hover, :focus, :active) {
    color: var(--sbb-color-call-to-action-hover);
  }

  &:disabled {
    cursor: default;
    opacity: 0;
  }
}

.sbb-calendar-controls-button-previous {
  float: left;
  padding-right: 0; // Only affects mobile view of standard variant (on purpose)
}

.sbb-calendar-controls-button-next {
  float: right;
  padding-left: 0; // Only affects mobile view of standard variant (on purpose)
}

.sbb-calendar-controls-label {
  flex-grow: 1;
  flex-shrink: 1;
  font-family: var(--sbb-font-light);
  font-size: #{sbb.pxToRem(21)};
  line-height: 3.2;
  color: var(--sbb-datepicker-calendar-header-color);

  :where(html:not(.sbb-lean)) & {
    @include sbb.mq($from: tablet) {
      font-size: var(--sbb-font-size-large);
    }
  }

  :where(html.sbb-lean) & {
    font-size: var(--sbb-font-size);
    line-height: sbb.pxToRem(36);
  }
}

.sbb-calendar-content {
  padding: 0 var(--sbb-datepicker-calendar-table-content-padding-width);
}

.sbb-calendar-table {
  width: 100%;
  border-spacing: 0;
  border-collapse: collapse;
  margin: 0;
  position: relative;

  :is(td, th) {
    color: var(--sbb-color-weak-accent);
    font-size: var(--sbb-font-size);
    line-height: 1.5;
  }
}

.sbb-calendar-table-header {
  &::after {
    content: '';
    display: block;
    position: absolute;
    top: calc(#{sbb.pxToRem(33)} * var(--sbb-scaling-factor));
    border-bottom: var(--sbb-border-width-thin) solid var(--sbb-datepicker-calendar-line-color);
    width: calc(100% + var(--sbb-datepicker-calendar-table-content-padding-width) * 2);
    left: calc(var(--sbb-datepicker-calendar-table-content-padding-width) * -1);
  }

  tr th {
    font-family: var(--sbb-font-roman);
    font-weight: 400;
    font-size: var(--sbb-font-size-small);
    text-transform: uppercase;
    padding: calc(#{sbb.pxToRem(7)} * var(--sbb-scaling-factor));
    color: var(--sbb-datepicker-calendar-header-color);
  }
}

.sbb-calendar-table-header-divider {
  height: calc(#{sbb.pxToRem(15)} * var(--sbb-scaling-factor));
}

.sbb-calendar-body-cell-container {
  position: relative;
  height: 0;
  padding: 0;
  line-height: 0;
  text-align: center;
}

.sbb-calendar-body-cell {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: none;
  text-align: center;
  outline: none;
  font-family: inherit;
  margin: 0;
  cursor: pointer;

  &:is(.sbb-calendar-body-range-background, .sbb-calendar-body-selected-begin, .sbb-calendar-body-selected-end)::before {
    @include datePickerCellContentBase();
    content: '';
    background-color: var(--sbb-datepicker-calendar-table-range-bg-color);
    width: 100%;
    left: 0;
  }

  :is(.sbb-calendar-body-cell-container:is(:last-child, :first-child)
      > &.sbb-calendar-body-range-background, &:is(.sbb-calendar-body-selected-begin, .sbb-calendar-body-selected-end, .sbb-calendar-body-range-background-offset-start))::before {
    width: 50%;
  }

  :is(.sbb-calendar-body-cell-container:first-child
      > &.sbb-calendar-body-range-background, &:is(.sbb-calendar-body-selected-begin, .sbb-calendar-body-range-background-offset-start))::before {
    left: auto;
    right: 0;
  }

  :is(.sbb-calendar-body-cell-container:is(:last-child, :first-child)
      > &.sbb-calendar-body-range-background, &.sbb-calendar-body-range-background-offset-start)::after {
    @include datePickerCellContentBase();
    content: '';
    background-color: var(--sbb-datepicker-calendar-table-range-bg-color);
  }

  :is(.sbb-calendar-body-cell-container:first-child
      > &.sbb-calendar-body-range-background, &.sbb-calendar-body-range-background-offset-start)::after {
    border-radius: 50% 0 0 50%;
  }

  .sbb-calendar-body-cell-container:last-child > &.sbb-calendar-body-range-background::after {
    border-radius: 0 50% 50% 0;
  }

  // If there is only one label in a row, or start is first or last entry
  :is(.sbb-calendar-body-cell-container:first-child:last-child
      > &.sbb-calendar-body-range-background, .sbb-calendar-body-cell-container:last-child
      > &:is(.sbb-calendar-body-range-background-offset-start, .sbb-calendar-body-selected-begin), .sbb-calendar-body-cell-container:first-child
      > &.sbb-calendar-body-selected-end, &.sbb-calendar-body-range-background-offset-start.sbb-calendar-body-selected-end) {
    &::before {
      display: none;
    }
    &::after {
      border-radius: 50%;
    }
  }
}

.sbb-calendar-body-cell,
.sbb-calendar-body-label {
  padding-top: var(--sbb-datepicker-calendar-body-cell-padding);
  padding-bottom: var(--sbb-datepicker-calendar-body-cell-padding);
}

// Use .sbb-calendar-body-cell selector to be specific enough
.sbb-calendar-body-cell.sbb-calendar-body-disabled {
  color: var(--sbb-color-cement);
  cursor: default;

  :where(html.sbb-lean) & {
    color: var(--sbb-color-storm);
  }

  &::after {
    content: '';
    width: calc(#{sbb.pxToRem(32)} * var(--sbb-scaling-factor));
    height: calc(#{sbb.pxToRem(1)} * var(--sbb-scaling-factor));
    top: calc(#{sbb.pxToRem(25)} * var(--sbb-scaling-factor));
    left: calc(50% - var(--sbb-datepicker-calendar-body-cell-disabled-offset));
    background-color: var(--sbb-color-cement);
    display: block;
    position: absolute;
    transform: rotate(-45deg);

    :where(html.sbb-lean) & {
      background-color: var(--sbb-color-storm);
      width: sbb.pxToRem(24);
      top: sbb.pxToRem(18);
    }
  }
}

.sbb-calendar-body-today {
  font-family: var(--sbb-font-bold);
  color: var(--sbb-color-black);
}

.sbb-calendar-body-cell-content {
  @include datePickerCellContentBase();
  border: var(--sbb-border-width) solid transparent;
  border-radius: 50%;
  z-index: 1;

  .sbb-calendar-body-cell:not(.sbb-calendar-body-disabled):is(:hover, :focus) & {
    background-color: var(--sbb-color-background);
    color: var(--sbb-color-call-to-action-hover);
    border-color: var(--sbb-color-call-to-action-hover);
  }

  :is(.sbb-calendar-body-cell:not(.sbb-calendar-body-disabled).sbb-calendar-body-selected, .sbb-calendar-body-selected-begin, .sbb-calendar-body-selected-end)
    & {
    background-color: var(--sbb-color-background);
    color: var(--sbb-color-weak-accent);
    border-color: var(--sbb-color-weak-accent);
  }
}
