name: "Installing Yarn dependencies"
description: "Installs the dependencies using Yarn"

runs:
  using: "composite"
  steps:
    - name: "Yarn: Get cache directory path"
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      shell: bash
    - name: "Yarn: Restore dependencies from cache"
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        # Cache key. Whenever the postinstall patches change, the cache needs to be invalidated.
        # If just the `yarn.lock` file changes, the most recent cache can be restored though.
        # See: https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action.
        key: ${{ runner.os }}-yarn-v3-${{hashFiles('tools/postinstall/apply-patches.js')}}-${{hashFiles('yarn.lock')}}
        restore-keys: ${{ runner.os }}-yarn-v3-${{hashFiles('tools/postinstall/apply-patches.js')}}-
    - name: "Yarn: Install dependencies"
      run: yarn install --frozen-lockfile --non-interactive
      shell: bash
