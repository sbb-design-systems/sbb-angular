name: Preview Deployment
# Secure deployment of pull request artifacts
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
# Changes to this file do not take effect until they are merged into the main / default branch.
on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types: [completed]

permissions:
  deployments: write
  packages: write
  pull-requests: write

jobs:
  preview-deployment:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.pull_requests[0] != null
    env:
      PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
      IMAGE_REPO: ghcr.io/${{ github.repository }}/showcase-preview
      IMAGE_TAG: rev-${{ github.event.workflow_run.head_sha }}
      IMAGE_PR_TAG: preview-pr${{ github.event.workflow_run.pull_requests[0].number }}
      ALLOWED_EXTENSIONS: css, gitignore, gitkeep, html, ico, jpg, js, json, png, scss, stackblitzrc, svg, ts
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v6
        with:
          cache: 'pnpm'
          node-version-file: '.nvmrc'
        
      - uses: actions/download-artifact@v5
        with:
          name: docs-artifact
          path: dist/docs/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GH_ACTIONS_ARTIFACT_DOWNLOAD }}
      - run: ls -llR ./dist/docs
      - run: node scripts/clean-docs-files.mjs

      - name: Create GitHub Deployment
        uses: actions/github-script@v8
        with:
          script: |
            const environment = process.env.PR_NUMBER ? process.env.IMAGE_PR_TAG : 'preview-main';
            const payload = { owner: context.repo.owner, repo: context.repo.repo, environment };
            const { data: deployment } = await github.rest.repos.createDeployment({
              ...payload,
              ref: context.payload.workflow_run.head_sha,
              auto_merge: false,
              required_contexts: ['build', 'packages', 'showcase']
            });
            await github.rest.repos.createDeploymentStatus({
              ...payload,
              deployment_id: deployment.id,
              state: 'in_progress',
              environment_url: `https://${context.repo.repo}-${environment}.app.sbb.ch`,
            });

      - uses: ./.github/actions/setup-mint
      - name: Create and publish container image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker build --tag $IMAGE_REPO:$IMAGE_TAG-fat .
          mint slim \
            --target $IMAGE_REPO:$IMAGE_TAG-fat \
            --tag $IMAGE_REPO:$IMAGE_TAG \
            --preserve-path /usr/share/nginx/html \
            --include-new false
          docker push $IMAGE_REPO:$IMAGE_TAG
          docker tag $IMAGE_REPO:$IMAGE_TAG $IMAGE_REPO:$IMAGE_PR_TAG
          docker push $IMAGE_REPO:$IMAGE_PR_TAG
          docker image list
        env:
          DOCKER_BUILDKIT: 1

      - name: "Add 'preview-available' label"
        # This label is used for filtering deployments in ArgoCD
        run: gh issue edit $PR_NUMBER --add-label "preview-available"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
