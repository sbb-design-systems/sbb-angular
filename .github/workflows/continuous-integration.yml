name: Continuous Integration
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  BAZEL_COMMAND: bazelisk
  BAZEL_CACHE_FILE_MAX_SIZE: 20MB
  BAZEL_CACHE_INTERMEDIATE_FILE_MAX_SIZE: 50MB
  BAZEL_CACHE_PACKAGES_MAX_SIZE: 150MB
  BAZEL_CACHE_COMBINED_MAX_SIZE: 600MB
  BAZEL_CACHE_VERSION: v3

permissions:
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version-file: '.nvmrc'
      - run: pnpm install

      - name: "Lint: Run tslint and bazel linter"
        run: pnpm lint

  integrity:
    runs-on: ubuntu-latest
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version-file: '.nvmrc'
      - run: pnpm install

      - name: "Integrity: Verify workspace integrity"
        run: pnpm integrity
      - name: "Integrity: Assert no changes (run `pnpm integrity` if this fails)"
        run: git diff --exit-code

  build:
    runs-on: ubuntu-latest
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: "Bazel: Copy .bazelrc to user home"
        run: cp ./.github/.bazelrc ~/
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version-file: '.nvmrc'
      - run: pnpm install
      - run: bazel build --build_tag_filters=-docs-package,-release-package -- src/...

  test:
    runs-on: ubuntu-22.04
    if: ${{ success() || failure() }}
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: "Bazel: Copy .bazelrc to user home"
        run: cp ./.github/.bazelrc ~/
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version-file: '.nvmrc'
      - run: pnpm install
      - run: bazelisk test src/... --build_tag_filters=-e2e --test_tag_filters=-e2e --build_tests_only

  docs:
    runs-on: ubuntu-latest
    if: ${{ success() || failure() }}
    needs: build
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: "Bazel: Copy .bazelrc to user home"
        run: cp ./.github/.bazelrc ~/
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version-file: '.nvmrc'
      - run: pnpm install

      - name: "Bazel: Build docs"
        if: ${{ success() || failure() }}
        run: pnpm -s build docs

      - name: "Artifact: Upload docs"
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: docs-artifact
          path: dist/docs/

  publish-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: docs
    env:
      IMAGE_REPO: ghcr.io/${{ github.repository }}/showcase-preview
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: "Download docs artifact"
        uses: actions/download-artifact@v4
        with:
          name: docs-artifact
          path: dist/docs/
      - uses: ./.github/actions/setup-mint
      - name: Create and publish container image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker build --tag $IMAGE_REPO:rev-main-fat .
          mint slim \
            --target $IMAGE_REPO:rev-main-fat \
            --tag $IMAGE_REPO:rev-main \
            --preserve-path /usr/share/nginx/html \
            --include-new false
          docker push $IMAGE_REPO:rev-main
          docker image list
        env:
          DOCKER_BUILDKIT: 1
