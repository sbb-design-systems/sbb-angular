name: Continuous Integration
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  BAZEL_COMMAND: bazelisk
  BAZEL_CACHE_FILE_MAX_SIZE: 20MB
  BAZEL_CACHE_INTERMEDIATE_FILE_MAX_SIZE: 50MB
  BAZEL_CACHE_PACKAGES_MAX_SIZE: 150MB
  BAZEL_CACHE_COMBINED_MAX_SIZE: 600MB
  BAZEL_CACHE_VERSION: v3

permissions:
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
    - name: "Yarn: Install"
      uses: ./.github/actions/yarn-install

    - name: "Lint: Run tslint and bazel linter"
      run: yarn lint

  build:
    runs-on: ubuntu-latest
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: "Bazel: Copy .bazelrc to user home"
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
    - name: "Yarn: Install"
      uses: ./.github/actions/yarn-install

    - name: "Bazel: Build"
      run: yarn -s build all
      timeout-minutes: 45

  packages:
    runs-on: ubuntu-latest
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: "Bazel: Copy .bazelrc to user home"
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
    - name: "Yarn: Install"
      uses: ./.github/actions/yarn-install

    - name: "Bazel: Build packages"
      run: yarn -s build packages

  integrity:
    runs-on: ubuntu-latest
    needs: packages
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: "Yarn: Install"
        uses: ./.github/actions/yarn-install

      - name: "Integrity: Verify workspace integrity"
        run: yarn integrity
      - name: "Integrity: Assert no changes (run `yarn integrity` if this fails)"
        run: git diff --exit-code

  test:
    runs-on: ubuntu-22.04
    if: ${{ success() || failure() }}
    needs: build
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: "Bazel: Copy .bazelrc to user home"
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
    - name: "Yarn: Install"
      uses: ./.github/actions/yarn-install

    - name: "Bazel: Run local tests"
      run: bazelisk test src/... --build_tag_filters=-e2e --test_tag_filters=-e2e --build_tests_only

  showcase:
    runs-on: ubuntu-latest
    if: ${{ success() || failure() }}
    needs: build
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: "Bazel: Copy .bazelrc to user home"
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
    - name: "Yarn: Install"
      uses: ./.github/actions/yarn-install

    - name: "Bazel: Build showcase"
      if: ${{ success() || failure() }}
      run: yarn -s build showcase
      env:
        JM_API_KEY: ${{ secrets.JM_API_KEY }}

    - name: "Deploy: Insert JM_API_KEY"
      run: sed -i "s|</head>|<script>window.JM_API_KEY='$JM_API_KEY'</script></head>|" dist/releases/showcase/index.html
      env:
        JM_API_KEY: ${{ secrets.JM_API_KEY }}
    - name: "Deploy: Pack showcase"
      run: mv $(npm pack ./dist/releases/showcase | tail -n 1) sbb-esta-angular-showcase.tgz
    - name: "Artifact: Upload showcase merge artifact for pull request"
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: showcase-artifact-${{ github.event.number }}
        path: sbb-esta-angular-showcase.tgz
    - name: "Artifact: Upload showcase merge artifact for main branch"
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: showcase-artifact-main
        path: sbb-esta-angular-showcase.tgz

  publish-showcase:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: showcase
    env:
      IMAGE_REPO: ghcr.io/${{ github.repository }}/showcase-preview
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: "Download showcase artifact"
      uses: actions/download-artifact@v4
      with:
        name: showcase-artifact-main
    - name: Unpack and prepare showcase file
      run: |
        tar -xvzf sbb-esta-angular-showcase.tgz
        mkdir -p dist/releases
        mv package/ dist/releases/showcase/
    - uses: ./.github/actions/setup-mint
    - name: Create and publish container image
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        docker build --tag $IMAGE_REPO:rev-main-fat .
        mint slim \
          --target $IMAGE_REPO:rev-main-fat \
          --tag $IMAGE_REPO:rev-main \
          --preserve-path /usr/share/nginx/html \
          --include-new false
        docker push $IMAGE_REPO:rev-main
        docker image list
      env:
        DOCKER_BUILDKIT: 1
