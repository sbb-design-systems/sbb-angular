name: Release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
env:
  BAZEL_COMMAND: bazelisk
  BAZEL_CACHE_VERSION: v3
  IMAGE_REPO: ghcr.io/${{ github.repository }}/showcase

permissions:
  id-token: write  # Required for OIDC
  packages: write

jobs:
  packages:
    runs-on: ubuntu-latest
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    - name: "Bazel: Copy .bazelrc to user home"
      run: cp ./.github/.bazelrc ~/
    - uses: pnpm/action-setup@v4
    - uses: actions/setup-node@v4
      with:
        cache: 'pnpm'
        node-version-file: '.nvmrc'
        registry-url: 'https://registry.npmjs.org'
    - run: pnpm install

    - name: "Bazel: Build packages"
      run: pnpm -s build packages

    - uses: actions/upload-artifact@v4
      with:
        name: packages
        path: dist/releases

    - name: Update npm
      run: npm install --global npm@latest
    - name: "Publish: Determine npm tag"
      id: npm_tag
      run: |
        if [[ "$REF" == *"-"* ]]
        then
            echo "npm_tag=next" >> $GITHUB_OUTPUT
        else
            echo "npm_tag=latest" >> $GITHUB_OUTPUT
        fi
      env:
        REF: ${{ github.ref }}
    - name: "Publish: @sbb-esta/angular"
      run: |
        cd dist/releases/angular
        npm publish --tag ${{ steps.npm_tag.outputs.npm_tag }} || true
    - name: "Publish: @sbb-esta/journey-maps"
      run: |
        cd dist/releases/journey-maps
        npm publish --tag ${{ steps.npm_tag.outputs.npm_tag }} || true
    - name: "Publish: @sbb-esta/journey-maps-wc"
      run: |
        cd dist/releases/journey-maps-wc
        npm publish --tag ${{ steps.npm_tag.outputs.npm_tag }} || true

  showcase:
    runs-on: ubuntu-latest
    services:
      cache:
        image: ghcr.io/kyubisation/bazel-cache-oci-registry:latest
        env:
          repository: ghcr.io/${{ github.repository }}/bazel-cache
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 31385:31385
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    - name: "Bazel: Copy .bazelrc to user home"
      run: cp ./.github/.bazelrc ~/
    - uses: pnpm/action-setup@v4
    - uses: actions/setup-node@v4
      with:
        cache: 'pnpm'
        node-version-file: '.nvmrc'
    - run: pnpm install

    - name: "Bazel: Build docs"
      run: pnpm -s build docs
      env:
        JM_API_KEY: ${{ secrets.JM_API_KEY }}

    - uses: ./.github/actions/setup-mint
    - name: Create and publish container image
      run: |
        VERSION=${GITHUB_REF/refs\/tags\//}
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        docker build --tag $IMAGE_REPO:$VERSION-fat .
        mint slim \
          --target $IMAGE_REPO:$VERSION-fat \
          --tag $IMAGE_REPO:$VERSION \
          --preserve-path /usr/share/nginx/html \
          --include-new false
        docker push $IMAGE_REPO:$VERSION
        docker tag $IMAGE_REPO:$VERSION $IMAGE_REPO:latest
        docker push $IMAGE_REPO:latest
        docker image list
      env:
        DOCKER_BUILDKIT: 1
